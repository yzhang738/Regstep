@using RSToolKit.Domain.Entities;
@using RSToolKit.Domain;
@using System.Text.RegularExpressions;
@using RSToolKit.Domain.Entities.Components;
@model RSToolKit.Domain.Entities.Prices
@{
    Layout = "~/Views/Shared/_Layout_FormBuilder.cshtml";
    var AudienceList = (List<Audience>)ViewBag.AudienceList;
    var Seatings = (List<Seating>)ViewBag.Seatings;
}
@section scripts
{
    <script src="~/Scripts/Moment/moment.js"></script>
    <script src="~/Scripts/Bootstrap/Plugins/DateTime%20Picker/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/jQuery/Plugins/sortable.js"></script>
    <script src="~/Scripts/FormBuilder/AudienceSelect.js"></script>
    <script src="~/Scripts/FormBuilder/DisplayOrder.js"></script>
    <script src="~/Scripts/FormBuilder/EditComponent.js"></script>
    <script src="~/Scripts/FormBuilder/EditPrice.js"></script>
    <script type="text/javascript">
        var formId = "@Model.UId";
        var audienceUIds = @JsonConvert.SerializeObject(Model.Audiences.Select(a => a.UId).ToList());
    </script>
}
@section styles
{
    <link href="~/Content/Bootstrap/bootstrap-datetimepicker-custom.min.css" rel="stylesheet" />
}
@section title {
    Edit Price List
}
@section breadcrumbs {
    @Html.Raw(((User)ViewBag.User).BreadCrumbs.GetBreadTrail(Url))
}
@section modals
{
    <!--Modal for Audiences-->
<div class="modal fade" id="tagsSelect">
    <div class="modal-dialog">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 class="modal-title">Registration Type Select</h3>
        </div>

        <div class="modal-body">
            <div class="container-fluid">
                <div class="tag-container tags-notSelected">
                    <div class="tag-title">
                        Available Registration Types
                    </div>
                    <div class="tags">
                        @foreach (var audience in Model.GetForm().Audiences)
                        {
                            <label class="control-label tag@(Model.Audiences.Contains(audience) ? " tag-hidden" : " tag-visible")" data-id="@audience.UId"><input type="checkbox" class="tag-input" data-id="@audience.UId" />@audience.Name</label>
                        }
                    </div>
                </div>
                <div class="tag-commands">
                    <a href="#" id="addTags"><span class="glyphicon glyphicon-plus"></span> Add</a> <a href="#" id="removeTags"><span class="glyphicon glyphicon-remove"></span> Remove</a>
                </div>
                <div class="tag-container tags-selected">
                    <div class="tag-title">
                        Selected Registration Types
                    </div>
                    <div class="tags">
                        @foreach (var audience in Model.GetForm().Audiences)
                        {
                            <label class="control-label tag@(Model.Audiences.Contains(audience) ? " tag-visible" : " tag-hidden")" data-id="@audience.UId"><input type="checkbox" class="tag-input" data-id="@audience.UId" />@audience.Name</label>
                        }
                    </div>

                </div>
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Set</button>
        </div>
    </div>
</div>

}
@using (Html.BeginForm("Price", "FormBuilder", FormMethod.Post, new { @class = "form", role = "form", data_xhr_method = "put" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.UId)
    <!--Options-->
    <div class="col-md-4 col-lg-3 add-padding-vertical">
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="panel-title">
                    <a data-toggle="collapse">
                        Options
                    </a>
                </span>
            </div>
            <div id="options-1" class="panel-collapse collapse in">
                <div class="panel-body">
                    <div class="add-padding-vertical-5">
                        <label class="control-label">Price List Name:</label>
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control input-sm" })
                    </div>
                    <div class="add-padding-vertical-5">
                        <a href="#" data-toggle="modal" data-target="#tagsSelect"><span class="glyphicon glyphicon-edit"></span> Registration Types</a>
                        @Html.Hidden("audienceUIds", JsonConvert.SerializeObject(Model.Audiences.Select(a => a.UId).ToList()))
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-8 col-lg-9">
        <div class="add-padding-bottom-5 text-medium text-color-2">
            Prices
        </div>
        <div class="row add-padding-vertical-5 color-grey-2">
            <div class="col-xs-12">
                <a href="#" id="newPrice"><span class="glyphicon glyphicon-plus"></span> Price</a>
            </div>
        </div>
        <div class="row">
            <table class="table table-striped" id="prices">
                <thead>
                    <tr>
                        <th>
                            Amount
                        </th>
                        <th>
                            Effective Date
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{ var priceIndex = 0; }
                    @foreach (var price in Model.Price)
                    {
                        <tr>
                            <td><input type="text" value="@price.Amount" data-type="money" name="Price[@priceIndex].Amount" class="form-control input-sm price-ammount" /><input type="hidden" name="Price[@priceIndex].UId" value="@price.UId.ToString()" class="price-uid"></td>
                            <td><input type="text" value="@price.Start.ToString()" name="Price[@priceIndex].Start" data-type="datetime" data-date-format="M/DD/YYYY H:MM A ZZ" class="form-control input-sm price-start" /></td>
                            <td><a class="modal-link delete-price"><span class="glyphicon glyphicon-trash"></span> Delete</a></td>
                        </tr>
                        priceIndex++;
                    }
                </tbody>
            </table>
        </div>
        <div class="add-padding-vertical">
            <button type="submit" class="btn btn-default">Save</button>
        </div>
    </div>
}
